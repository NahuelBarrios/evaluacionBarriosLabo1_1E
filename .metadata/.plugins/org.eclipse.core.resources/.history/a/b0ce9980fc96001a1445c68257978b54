#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "utn.h"
#include "cliente.h"
#include "prestamo.h"
#include "informes.h"


//***********************************************************************************************************************************
int realizarPrestamo(ePrestamo arrayPrestamo[], int sizePrestamo, int* contadorID,eCliente arrayCliente[],int sizeCliente)
{
    int retorno=-1;
    int posicion;
    int bufferIdCliente;
    int posicion2;

    if(arrayPrestamo!=NULL && sizePrestamo>0 && contadorID!=NULL && arrayCliente!=NULL && sizeCliente>0)
    {
        if(buscarEmptyPrestamo(arrayPrestamo,sizePrestamo,&posicion)==-1)
        {
            printf("\nNo hay lugares vacios");
        }
        else
        {
        	utn_getUnsignedInt("\nIngrese el id Cliente: ","\nError.",1,sizeof(int),1,sizePrestamo,3,&bufferIdCliente);
        	if(buscarIdCliente(arrayCliente,sizeCliente,bufferIdCliente,&posicion2)==-1)
        	{
        		printf("\nNo Existe ese Id\n");
        	}

        	else
        	{
        	// Si existe Cargo lo siguiente
            (*contadorID)++;
            arrayPrestamo[posicion].idPrestamo=*contadorID;
            arrayPrestamo[posicion].isEmptyPrestamo=0;
            arrayPrestamo[posicion].idCliente=bufferIdCliente;
            utn_getFloat("\nImporte: ","\nError",1,100000,1,100000,3,&arrayPrestamo[posicion].importePrestamo);
            utn_getUnsignedInt("\nCantidad de cuotas: ","\nError",1,sizeof(int),1,10000,3,&arrayPrestamo[posicion].cuotasPrestamo);
            printf("\n\nId Prestamo: %d\nid Cliente: %d\nImporte: %.2f\nCant de cuotas: %d\nEstado de prestamo: %s",
            		arrayPrestamo[posicion].idPrestamo,arrayPrestamo[posicion].idCliente,arrayPrestamo[posicion].importePrestamo,
					arrayPrestamo[posicion].cuotasPrestamo,arrayPrestamo[posicion].estadoPrestamo);
            retorno=0;
        	}
        }
    }
    return retorno;
}
//***********************************************************************************************************************************

int saldarPrestamo(ePrestamo arrayPrestamo[], int sizePrestamo,eCliente arrayCliente[],int sizeCliente)
{
	int retorno = -1;
	int idPrestamo;
	int posicion;
	int i;
	int option;

	if(arrayPrestamo != NULL && sizePrestamo>0 && arrayCliente != NULL && sizeCliente>0)
	{
		utn_getUnsignedInt("\nIngrese el id de prestamo: ","\nError.",1,sizeof(int),1,sizePrestamo,3,&idPrestamo);
		if(buscarIdPrestamo(arrayPrestamo,sizePrestamo,idPrestamo,&posicion)==-1)
		{
			printf("\nNo Existe ese Id\n");
		}
		else
		{
			for(i=0;i<sizeCliente;i++)
			{
				if(arrayCliente[i].isEmptyCliente==0 && arrayCliente[i].idCliente == arrayPrestamo[posicion].idCliente)
				{
					printf("\n*********************************************\nID: %d\nNombre: %s\nApellido: %s\nCuil: %s\n*********************************************",
							arrayCliente[i].idCliente,arrayCliente[i].nombreCliente,arrayCliente[i].apellidoCliente,arrayCliente[i].cuilCliente);
				}
			}


			utn_getUnsignedInt("\nSu estado esta: \n1-Saldado\n2-Salir\nIngrese opcion: ","\nError.",1,sizeof(int),1,sizePrestamo,3,&option);
			switch(option)
			{
			case 1:
				strcpy(arrayPrestamo[posicion].estadoPrestamo,"SALDADO");
				printf("\nSu prestamo se encuentra: %s",arrayPrestamo[posicion].estadoPrestamo);
				break;
			case 2:
				break;
			default: printf("\nIngrese la opcion entre 1 o 2\n");

			}
		}

		retorno = 0;
	}

	return retorno;
}
//***********************************************************************************************************************************
int reanudarPrestamo(ePrestamo arrayPrestamo[], int sizePrestamo,eCliente arrayCliente[],int sizeCliente)
{
	int retorno = -1;
	int idPrestamo;
	int posicion;
	int i;
	int option;

	if(arrayPrestamo != NULL && sizePrestamo>0 && arrayCliente != NULL && sizeCliente>0)
	{
		utn_getUnsignedInt("\nIngrese el id de prestamo: ","\nError.",1,sizeof(int),1,sizePrestamo,3,&idPrestamo);
		if(buscarIdPrestamo(arrayPrestamo,sizePrestamo,idPrestamo,&posicion)==-1)
		{
			printf("\nNo Existe ese Id\n");
		}

		else
		{
			for(i=0;i<sizeCliente;i++)
			{
				if(arrayCliente[i].isEmptyCliente==0 && arrayCliente[i].idCliente == arrayPrestamo[posicion].idCliente)
				{
					printf("\n*********************************************\nID: %d\nNombre: %s\nApellido: %s\nCuil: %s\n*********************************************",
							arrayCliente[i].idCliente,arrayCliente[i].nombreCliente,arrayCliente[i].apellidoCliente,arrayCliente[i].cuilCliente);
				}
			}

			utn_getUnsignedInt("\nSu estado esta: \n1-ACTIVO\n2-Salir\nIngrese opcion: ","\nError.",1,sizeof(int),1,sizePrestamo,3,&option);
			switch(option)
			{
			case 1:
				strcpy(arrayPrestamo[posicion].estadoPrestamo,"ACTIVO");
				printf("\nSu prestamo se encuentra: %s",arrayPrestamo[posicion].estadoPrestamo);
				break;
			case 2:
				break;
			default: printf("\nIngrese la opcion entre 1 o 2\n");
			}


		}
		retorno = 0;
	}
	return retorno;
}
//***********************************************************************************************************************************

int imprimirClientes(ePrestamo arrayPrestamo[], int sizePrestamo,eCliente arrayCliente[],int sizeCliente)
{
	int retorno = -1;
	int i,j;

	if(arrayPrestamo != NULL && sizePrestamo>0 && arrayCliente != NULL && sizeCliente>0)
	{
		for(i=0;i<sizePrestamo;i++)
		{
			if(arrayPrestamo[i].isEmptyPrestamo == 1)
				continue;
			if(strcmp(arrayPrestamo[i].estadoPrestamo,"ACTIVO") == 0)
			{
				for(j=0;j<sizeCliente;j++)
				{
					if( arrayCliente[j].isEmptyCliente == 1)
						continue;
					if(arrayPrestamo[i].idCliente == arrayCliente[j].idCliente)
					{
						printf("\n*********************************************\nID: %d\nNombre: %s\nApellido: %s\nCuil: %s\nid Prestamo: %d\nPrestamo: %s\n*********************************************",
								arrayCliente[j].idCliente,arrayCliente[j].nombreCliente,arrayCliente[j].apellidoCliente,arrayCliente[j].cuilCliente,arrayPrestamo[i].idPrestamo,arrayPrestamo[i].estadoPrestamo);

					}
				}
			}
		}
		retorno = 0;
	}
	return retorno;
}

int imprimirPrestamos(ePrestamo arrayPrestamo[], int sizePrestamo,eCliente arrayCliente[],int sizeCliente)
{
	int retorno = -1;
	int i,j;

	//Se imprimirá una lista de préstamos activos con todos sus datos junto con el c.u.i.l. del cliente correspondiente.
	if(arrayPrestamo != NULL && sizePrestamo>0 && arrayCliente != NULL && sizeCliente>0)
	{
		for(i=0;i<sizePrestamo;i++)
		{
			if(arrayPrestamo[i].isEmptyPrestamo == 1)
				continue;
			if(strcmp(arrayPrestamo[i].estadoPrestamo,"ACTIVO") == 0)
			{
				for(j=0;j<sizeCliente;j++)
				{
					if( arrayCliente[j].isEmptyCliente == 1)
						continue;
					if(arrayPrestamo[i].idCliente == arrayCliente[j].idCliente)
					{
						printf("\n****************************************\nId Prestamo: %d\nId Cliente: %d\nImporte: %.2f\nCant Cuotas: %d\nEstado: %s\nCuil de cliente: %s\n*********************************************",
								arrayPrestamo[i].idPrestamo,arrayPrestamo[i].idCliente,arrayPrestamo[i].importePrestamo,arrayPrestamo[i].cuotasPrestamo,arrayPrestamo[i].estadoPrestamo,arrayCliente[j].cuilCliente);

					}
				}

			}
		}
		retorno = 0;
	}

	return retorno;
}


int informeClientes(ePrestamo arrayPrestamo[], int sizePrestamo,eCliente arrayCliente[],int sizeCliente)
{
	int retorno = -1;
	int option = 0;


		switch(option)
		{



		}


	return retorno;
}
