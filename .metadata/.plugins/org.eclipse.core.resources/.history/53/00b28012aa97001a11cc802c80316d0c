/*
 * informes.h
 *
 *  Created on: 15 may. 2020
 *      Author: Nahu_
 */

#ifndef INFORMES_H_
#define INFORMES_H_

//***********************************************************************************************************************************
/** \brief se realiza una baja de cliente con todos los prestamos que este
 * tenga activo.
 * \param arrayCliente[] eCliente array de clientes
 * \param sizeCliente int Longitud de la matriz cliente
 * \param arrayPrestamo[] ePrestamo array de prestamos
 * \param sizePrestamo int Longitud de la matriz prestamo
 * \return int Retorna (-1) si el Error es [Longitud inválida o puntero NULO] - Retorna (0) si esta todo Ok
 */
int bajaCliente(eCliente arrayCliente[],int sizeCliente,ePrestamo arrayPrestamo[], int sizePrestamo);
//***********************************************************************************************************************************
/** \brief se realiza una baja de cliente con todos los prestamos que este
 * tenga activo.
 * \param arrayCliente[] eCliente array de clientes
 * \param sizeCliente int Longitud de la matriz cliente
 * \param arrayPrestamo[] ePrestamo array de prestamos
 * \param sizePrestamo int Longitud de la matriz prestamo
 * \return int Retorna (-1) si el Error es [Longitud inválida o puntero NULO] - Retorna (0) si esta todo Ok
 */
int realizarPrestamo(ePrestamo arrayPrestamo[], int sizePrestamo, int* contadorID,eCliente arrayCliente[],int sizeCliente);

int saldarPrestamo(ePrestamo arrayPrestamo[], int sizePrestamo,eCliente arrayCliente[],int sizeCliente);

int reanudarPrestamo(ePrestamo arrayPrestamo[], int sizePrestamo,eCliente arrayCliente[],int sizeCliente);

int imprimirClientes(ePrestamo arrayPrestamo[], int sizePrestamo,eCliente arrayCliente[],int sizeCliente);

int imprimirPrestamos(ePrestamo arrayPrestamo[], int sizePrestamo,eCliente arrayCliente[],int sizeCliente);

int informeClientes(eCliente arrayCliente[],int sizeCliente);

int informePrestamo(ePrestamo arrayPrestamo[], int sizePrestamo);

#endif /* INFORMES_H_ */
