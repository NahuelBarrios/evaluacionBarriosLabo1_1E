/*
 * cliente.h
 *
 *  Created on: 14 may. 2020
 *      Author: Nahu_
 */

#ifndef CLIENTE_H_
#define CLIENTE_H_

typedef struct
{
	int idCliente;
	char nombreCliente[51];
	char apellidoCliente[51];
	char cuilCliente[15];
	int masPrestamoActivo;
	int masPrestamoSaldo;
	int isEmptyCliente;

}eCliente;

//***********************************************************************************************************************************
/** \brief Para indicar que todas las posiciones en la matriz están vacías,
 * esta función pone la bandera (isEmpty) en TRUE en todas las
 * posiciones de la matriz
 * \param array[] eCliente array de clientes
 * \param size int Longitud de la matriz
 * \return int Retorna (-1) si el Error es [Longitud inválida o puntero NULO] - Retorna (0) si esta todo Ok
 */
int inicializarCliente(eCliente array[], int size);


/** \brief Carga los datos pasados por los parametros y realiza un alta
 * \param array[] eCliente array de clientes
 * \param size int Longitud de la matriz
 * \param id int recibe un entero(un id)
 * \param nombre[] char recibe un array de char(Un nombre de cliente)
 * \param apellido[] char recibe un array de char(Un apellido de cliente)
 * \param cuil[] char recibe un array de char(Un cuil de cliente)
 */
void hardCodeCliente(eCliente array[],int size,int id,char nombre[],char apellido[],char cuil[]);
//***********************************************************************************************************************************

/** \brief Para indicar que todas las posiciones en la matriz están vacías,
 * esta función pone la bandera (isEmpty) en TRUE en todas las
 * posiciones de la matriz
 * \param array[] eCliente array de clientes
 * \param size int Longitud de la matriz
 * \return int Retorna (-1) si el Error es [Longitud inválida o puntero NULO] - Retorna (0) si esta todo Ok
 */
int altaCliente(eCliente array[], int size, int* contadorID);

int buscarEmptyCliente(eCliente array[], int size, int* posicion);
//***********************************************************************************************************************************
int modificarCliente(eCliente array[], int sizeArray);

int buscarIdCliente(eCliente array[], int size, int valorBuscado, int* posicion);
//***********************************************************************************************************************************
int listarCliente(eCliente array[], int size);
#endif /* CLIENTE_H_ */
